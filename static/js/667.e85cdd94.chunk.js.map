{"version":3,"file":"static/js/667.e85cdd94.chunk.js","mappings":"sSAEMA,E,MAAMC,GAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAkB,mCAAG,oGACTL,EAAIM,IAAI,wBADC,cAC1BC,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAOC,GAAP,uFACPX,EAAIM,IAAJ,iBAAkBK,IADX,cACxBJ,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKhBI,EAAU,mCAAG,WAAOD,GAAP,uFACDX,EAAIM,IAAJ,iBAAkBK,EAAlB,aADC,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKK,MAFG,2CAAH,sDAKVC,EAAY,mCAAG,WAAOH,GAAP,uFACHX,EAAIM,IAAJ,iBAAkBK,EAAlB,aADG,cACpBJ,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZM,EAAc,mCAAG,WAAOC,EAAOC,GAAd,uFACLjB,EAAIM,IAAJ,gBAAyB,CAC9CH,OAAQ,CACNa,MAAAA,EACAC,KAAAA,KAJwB,cACtBV,EADsB,OAO5BW,QAAQC,IAAIZ,EAASC,MAPO,kBAQrBD,EAASC,MARY,2CAAH,uD,iKCxBZ,SAASY,IAAc,IAAD,IACnC,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMN,EAAI,UAAGK,EAAahB,IAAI,eAApB,QAA+B,EACnCU,EAAK,UAAGM,EAAahB,IAAI,gBAApB,QAAgC,GAE3C,GAAoCkB,EAAAA,EAAAA,UAAQ,OAACR,QAAD,IAACA,EAAAA,EAAS,IAAtD,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAkCJ,EAAAA,EAAAA,UAAS,IAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,qGACsBlB,EAAAA,EAAAA,IAAeC,EAAOC,GAD5C,OACQiB,EADR,OAGEN,EAAgBM,EAAMzB,SACtBqB,EAAaI,GAJf,4CALc,sBACA,KAAVlB,GADU,mCAWdmB,EACD,GAAE,CAACnB,EAAOC,IAsBX,OACE,iCACE,kBAAMmB,SAtBW,SAAAC,GACnBA,EAAMC,iBAEoB,KAAtBb,EAAWc,OAKfhB,EAAgB,CAAEP,MAAOS,EAAWc,OAAOC,cAAevB,KAAM,IAJ9DwB,MAAM,8BAMT,EAYG,WACE,kBAAOC,KAAK,OAAOC,SAXJ,SAAAN,GACnBX,EAAcW,EAAMO,cAAcC,MACnC,EASgDA,MAAOpB,KAClD,mBAAQiB,KAAK,SAAb,wBAEF,wBACGf,EAAamB,KAAI,SAAAC,GAAW,OAC3B,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAYE,IAAMC,MAAO,CAAEC,KAAMpB,GAAtD,SACGgB,EAAYK,kBAFRL,EAAYE,GADM,OASrB,OAATpB,QAAS,IAATA,OAAA,EAAAA,EAAWwB,eACV,0BACE,yBACG,OAAIC,MAAK,OAACzB,QAAD,IAACA,OAAD,EAACA,EAAWwB,cAAcP,KAAI,SAACS,EAAGC,GAAJ,OACtC,yBACE,mBACEC,SAAUD,EAAQ,KAAR,OAAc3B,QAAd,IAAcA,OAAd,EAAcA,EAAWZ,MACnCyC,QAAS,kBA3BAC,EA2BuBH,EAAQ,OA1BtDjC,EAAgB,CAAEP,MAAOS,EAAWc,OAAOC,cAAevB,KAAM0C,IADzC,IAAAA,CA2BA,EAFX,SAIGH,EAAQ,KALJA,EAD6B,UAenD,C","sources":["helpers/api.js","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '997ea85e86de02db6a9182bda8c38aca',\n  },\n});\n\nexport const fetchTrendingFilms = async () => {\n  const response = await api.get('/trending/movie/week')\n  return response.data.results;\n};\n\nexport const fetchFilmDetails = async (movie_id) => {\n  const response = await api.get(`/movie/${movie_id}`)\n  return response.data;\n};\n\nexport const fetcActors = async (movie_id) => {\n  const response = await api.get(`/movie/${movie_id}/credits`)\n  return response.data.cast;\n};\n\nexport const fetchReviews = async (movie_id) => {\n  const response = await api.get(`/movie/${movie_id}/reviews`)\n  return response.data.results;\n};\n\nexport const fetchFindFilms = async (query, page) => {\n  const response = await api.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    }\n  })\n  console.log(response.data);\n  return response.data;\n};\n","import { fetchFindFilms } from 'helpers/api';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// import { omitBy } from 'lodash';\n\nexport default function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const page = searchParams.get('page') ?? 1;\n  const query = searchParams.get('query') ?? '';\n\n  const [searchWord, setSearchWord] = useState(query ?? '');\n  const [findingFilms, setFindingFilms] = useState([]);\n  const [filmsData, setFilmsData] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function getFindFilms() {\n      const films = await fetchFindFilms(query, page);\n      // (omitBy({ query, page }, item => !item));\n      setFindingFilms(films.results);\n      setFilmsData(films);\n    }\n    getFindFilms();\n  }, [query, page]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchWord.trim() === '') {\n      alert('Please write what you need.');\n      return;\n    }\n\n    setSearchParams({ query: searchWord.trim().toLowerCase(), page: 1 });\n    // (omitBy({ query: searchWord.trim().toLowerCase(), page: 1 }, item => !item;}));\n  };\n\n  const handleChange = event => {\n    setSearchWord(event.currentTarget.value);\n  };\n\n  const handleChangePage = newPage => {\n    setSearchParams({ query: searchWord.trim().toLowerCase(), page: newPage });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" onChange={handleChange} value={searchWord} />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {findingFilms.map(findingFilm => (\n          <li key={findingFilm.id}>\n            <Link to={`/movies/${findingFilm.id}`} state={{ from: location }}>\n              {findingFilm.original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n\n      {filmsData?.total_pages && (\n        <div>\n          <ul>\n            {[...Array(filmsData?.total_pages)].map((_, index) => (\n              <li key={index}>\n                <button\n                  disabled={index + 1 === filmsData?.page}\n                  onClick={() => handleChangePage(index + 1)}\n                >\n                  {index + 1}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["api","axios","baseURL","params","api_key","fetchTrendingFilms","get","response","data","results","fetchFilmDetails","movie_id","fetcActors","cast","fetchReviews","fetchFindFilms","query","page","console","log","MoviesPage","useSearchParams","searchParams","setSearchParams","useState","searchWord","setSearchWord","findingFilms","setFindingFilms","filmsData","setFilmsData","location","useLocation","useEffect","films","getFindFilms","onSubmit","event","preventDefault","trim","toLowerCase","alert","type","onChange","currentTarget","value","map","findingFilm","to","id","state","from","original_title","total_pages","Array","_","index","disabled","onClick","newPage"],"sourceRoot":""}