{"version":3,"file":"static/js/76.38992f72.chunk.js","mappings":"6PACA,EAA4B,wBAA5B,EAAgE,wB,SCMjD,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC2BC,EAAAA,EAAAA,IAAWN,GADtC,OACQO,EADR,OAEEH,EAAUG,GAFZ,4CADc,uBAAC,WAAD,wBAKdC,EAED,GAAE,KAGD,eAAIC,UAAWC,EAAf,gBACGP,QADH,IACGA,OADH,EACGA,EAAQQ,KAAI,SAAAC,GAAK,OAChB,gBAAmBH,UAAWC,EAA9B,WACE,gBACEG,KAAKC,EAAAA,EAAAA,GAAUF,EAAMG,cACrBC,IAAI,QACJC,MAAM,QACNC,OAAO,WAET,kCAAUN,EAAMO,kBAChB,uCAAeP,EAAMQ,eARdR,EAAMS,GADC,KAcvB,C,sLClCKC,E,MAAMC,GAAAA,OAAa,CACvBC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAkB,mCAAG,oGACTL,EAAIM,IAAI,wBADC,cAC1BC,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAOC,GAAP,uFACPX,EAAIM,IAAJ,iBAAkBK,IADX,cACxBJ,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDAKhBxB,EAAU,mCAAG,WAAO2B,GAAP,uFACDX,EAAIM,IAAJ,iBAAkBK,EAAlB,aADC,cAClBJ,EADkB,yBAEjBA,EAASC,KAAKI,MAFG,2CAAH,sDAKVC,EAAY,mCAAG,WAAOF,GAAP,uFACHX,EAAIM,IAAJ,iBAAkBK,EAAlB,aADG,cACpBJ,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZK,EAAc,mCAAG,WAAOC,EAAOC,GAAd,uFACLhB,EAAIM,IAAJ,gBAAyB,CAC9CH,OAAQ,CACNY,MAAAA,EACAC,KAAAA,KAJwB,cACtBT,EADsB,OAO5BU,QAAQC,IAAIX,EAASC,MAPO,kBAQrBD,EAASC,MARY,2CAAH,uD,mEC3BpB,SAAShB,EAAU2B,GACxB,OAAIA,EACI,kCAAN,OAAyCA,GAEpCC,CACR,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","helpers/api.js","helpers/createImg.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"Cast_cast_list__6yHmm\",\"cast_item\":\"Cast_cast_item__SSip9\"};","import { fetcActors } from 'helpers/api';\nimport { createImg } from 'helpers/createImg';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState();\n\n  useEffect(() => {\n    async function getCast() {\n      const actorsData = await fetcActors(movieId);\n      setActors(actorsData);\n    }\n    getCast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul className={css.cast_list}>\n      {actors?.map(actor => (\n        <li key={actor.id} className={css.cast_item}>\n          <img\n            src={createImg(actor.profile_path)}\n            alt=\"actor\"\n            width=\"200px\"\n            height=\"300px\"\n          />\n          <p>Name: {actor.original_name}</p>\n          <p>Character: {actor.character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '997ea85e86de02db6a9182bda8c38aca',\n  },\n});\n\nexport const fetchTrendingFilms = async () => {\n  const response = await api.get('/trending/movie/week')\n  return response.data.results;\n};\n\nexport const fetchFilmDetails = async (movie_id) => {\n  const response = await api.get(`/movie/${movie_id}`)\n  return response.data;\n};\n\nexport const fetcActors = async (movie_id) => {\n  const response = await api.get(`/movie/${movie_id}/credits`)\n  return response.data.cast;\n};\n\nexport const fetchReviews = async (movie_id) => {\n  const response = await api.get(`/movie/${movie_id}/reviews`)\n  return response.data.results;\n};\n\nexport const fetchFindFilms = async (query, page) => {\n  const response = await api.get(`/search/movie`, {\n    params: {\n      query,\n      page,\n    }\n  })\n  console.log(response.data);\n  return response.data;\n};\n","import incognito from '../images/incognito.jpeg'\n\nexport function createImg(path) {\n  if (path) {\n    return `https://image.tmdb.org/t/p/w500${path}`;\n  }\n  return incognito;\n}"],"names":["Cast","movieId","useParams","useState","actors","setActors","useEffect","fetcActors","actorsData","getCast","className","css","map","actor","src","createImg","profile_path","alt","width","height","original_name","character","id","api","axios","baseURL","params","api_key","fetchTrendingFilms","get","response","data","results","fetchFilmDetails","movie_id","cast","fetchReviews","fetchFindFilms","query","page","console","log","path","incognito"],"sourceRoot":""}